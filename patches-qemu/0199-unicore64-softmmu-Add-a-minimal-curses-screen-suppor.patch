From 195a5cc60695adf9b98c79de34d1e669e8b4f0a6 Mon Sep 17 00:00:00 2001
From: Zhang Mengchi <zhangmengchi@mprc.pku.edu.cn>
Date: Tue, 4 Dec 2012 11:19:02 +0800
Subject: [PATCH 199/247] unicore64-softmmu: Add a minimal curses screen
 support

Signed-off-by: Zhang Mengchi <zhangmengchi@mprc.pku.edu.cn>
---
 target-unicore64/helper.c |   47 ++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 46 insertions(+), 1 deletion(-)

diff --git a/target-unicore64/helper.c b/target-unicore64/helper.c
index 88fd985..21d9b6b 100644
--- a/target-unicore64/helper.c
+++ b/target-unicore64/helper.c
@@ -7,6 +7,7 @@
 #include "gdbstub.h"
 #include "helper.h"
 #include "host-utils.h"
+#include "console.h"
 
 #define DEBUG_UC64
 
@@ -37,10 +38,54 @@ CPUUniCore64State *uc64_cpu_init(const char *cpu_model)
     return env;
 }
 
+#if !defined(CONFIG_USER_ONLY) && defined(CONFIG_CURSES)
+/*
+ * FIXME:
+ *     1. curses windows will be blank when switching back
+ *     2. backspace is not handled yet
+ */
+static void putc_on_screen(unsigned char ch)
+{
+    static WINDOW *localwin;
+    static int init;
+
+    if (!init) {
+        /* Assume 80 * 30 screen to minimize the implementation */
+        localwin = newwin(30, 80, 0, 0);
+        scrollok(localwin, TRUE);
+        init = TRUE;
+    }
+
+    if (isprint(ch)) {
+        wprintw(localwin, "%c", ch);
+    } else {
+        switch (ch) {
+        case '\n':
+            wprintw(localwin, "\n", ch);
+            break;
+        case '\r':
+            /* If '\r' is put before '\n', the curses window will destroy the
+             * last print line. And meanwhile, '\n' implifies '\r' inside. */
+            break;
+        case '\t':
+            wprintw(localwin, "\t", ch);
+            break;
+        default: /* Not handled, so just print it hex code */
+            wprintw(localwin, "-- 0x%x --", ch);
+        }
+    }
+
+    wrefresh(localwin);
+}
+#else
+#define putc_on_screen(c)               do { } while (0)
+#endif
+
 void helper_ocd_output(void)
 {
     if (env->cp0.c12_sysu[6]) { /* 1 */
-        printf("%c", (unsigned char)env->cp0.c12_sysu[7]);
+        /* Output to screen */
+        putc_on_screen((unsigned char)env->cp0.c12_sysu[7]);
     } else { /* 0 */
         printf("\n--%16" PRIx64 "--", env->cp0.c12_sysu[7]);
     }
-- 
1.7.9.5

