From b7062a60b03619220b75f4d1a11dc947e1d44d01 Mon Sep 17 00:00:00 2001
From: Liu Wenhui <liuwenhui@mprc.pku.edu.cn>
Date: Sat, 18 Aug 2012 04:33:34 +0800
Subject: [PATCH 160/247] unicore64: Add insn CTF/CFF R31

Signed-off-by: Liu Wenhui <liuwenhui@mprc.pku.edu.cn>
---
 target-unicore64/helper.h       |    2 ++
 target-unicore64/ucf64_helper.c |   10 ++++++++++
 target-unicore64/ucf64_trans.h  |   21 +++++++++++++++------
 3 files changed, 27 insertions(+), 6 deletions(-)

diff --git a/target-unicore64/helper.h b/target-unicore64/helper.h
index afd8e5c..510cd26 100644
--- a/target-unicore64/helper.h
+++ b/target-unicore64/helper.h
@@ -34,6 +34,8 @@ DEF_HELPER_2(adc_cc_i64, i64, i64, i64)
 
 DEF_HELPER_1(ucf64_get_fpsr, i64, env)
 DEF_HELPER_2(ucf64_set_fpsr, void, env, i64)
+DEF_HELPER_1(ucf64_get_fpcr, i64, env)
+DEF_HELPER_2(ucf64_set_fpcr, void, env, i64)
 
 DEF_HELPER_3(ucf64_adds, f32, f32, f32, env)
 DEF_HELPER_3(ucf64_addd, f64, f64, f64, env)
diff --git a/target-unicore64/ucf64_helper.c b/target-unicore64/ucf64_helper.c
index 69df0b1..0a66821 100644
--- a/target-unicore64/ucf64_helper.c
+++ b/target-unicore64/ucf64_helper.c
@@ -126,6 +126,16 @@ void HELPER(ucf64_set_fpsr)(CPUUniCore64State *env, uint64_t val)
     set_float_exception_flags(i, &env->ucf64.qemu_fp_status);
 }
 
+void HELPER(ucf64_set_fpcr)(CPUUniCore64State *env, uint64_t val)
+{
+    env->ucf64.fpcr = val;
+}
+
+uint64_t HELPER(ucf64_get_fpcr)(CPUUniCore64State *env)
+{
+    return env->ucf64.fpcr;
+}
+
 float32 HELPER(ucf64_adds)(float32 a, float32 b, CPUUniCore64State *env)
 {
     return float32_add(a, b, &env->ucf64.qemu_fp_status);
diff --git a/target-unicore64/ucf64_trans.h b/target-unicore64/ucf64_trans.h
index d2e417e..d38ceb9 100644
--- a/target-unicore64/ucf64_trans.h
+++ b/target-unicore64/ucf64_trans.h
@@ -31,10 +31,9 @@ static void do_ucf64_trans(CPUUniCore64State *env, DisasContext *s,
 {
     TCGv_i64 tmp;
 
-    ILLEGAL_INSN(UCOP_REG_D == 31);
-
     tmp = tcg_temp_new_i64();
     if ((insn & 0xfde007ff) == 0xc0400000) { /* insn MFF MTF */
+        ILLEGAL_INSN(UCOP_REG_D == 31);
         if (UCOP_SET(25)) { /* MFF */
             tcg_gen_ld_i64(tmp, cpu_env, ucf64_reg_offset(UCOP_REG_S1));
             tcg_gen_mov_i64(cpu_R[UCOP_REG_D], tmp);
@@ -47,11 +46,21 @@ static void do_ucf64_trans(CPUUniCore64State *env, DisasContext *s,
 
     if ((insn & 0xfde0ffff) == 0xc4400000) { /* insn CFF CTF */
         if (UCOP_SET(25)) { /* CFF */
-            gen_helper_ucf64_get_fpsr(tmp, cpu_env);
-            tcg_gen_mov_i64(cpu_R[UCOP_REG_D], tmp);
+            if (UCOP_REG_D != 31) {
+                gen_helper_ucf64_get_fpsr(tmp, cpu_env);
+                tcg_gen_mov_i64(cpu_R[UCOP_REG_D], tmp);
+            } else { /* FLAG = FPU.FLAG*/
+                gen_helper_ucf64_get_fpcr(tmp, cpu_env);
+                gen_helper_afr_write(tmp);
+            }
         } else { /* CTF */
-            tcg_gen_mov_i64(tmp, cpu_R[UCOP_REG_D]);
-            gen_helper_ucf64_set_fpsr(cpu_env, tmp);
+            if (UCOP_REG_D != 31) {
+                tcg_gen_mov_i64(tmp, cpu_R[UCOP_REG_D]);
+                gen_helper_ucf64_set_fpsr(cpu_env, tmp);
+            } else { /* FPU.FLAG = FLAG */
+                gen_helper_afr_read(tmp);
+                gen_helper_ucf64_set_fpcr(cpu_env, tmp);
+            }
         }
         return;
     }
-- 
1.7.9.5

