From ce8b407d538ed78667135284f83332a1fc61379d Mon Sep 17 00:00:00 2001
From: Guan Xuetao <gxt@mprc.pku.edu.cn>
Date: Sat, 11 Aug 2012 10:15:05 +0800
Subject: [PATCH 081/247] Revert "unicore64-bugfix: Fix gen_test_cond"

This reverts commit ed81bd8848998d8c8fead103a0fc3c7cbb2d0bd7.
---
 target-unicore64/translate.c |   28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/target-unicore64/translate.c b/target-unicore64/translate.c
index cdb66a1..09a434e 100644
--- a/target-unicore64/translate.c
+++ b/target-unicore64/translate.c
@@ -113,11 +113,11 @@ static void gen_test_cond(int cond, int label)
     switch (cond) {
     case 0x0: /* eq: Z */
         gen_load_cpu_field(t_f1_64, ZF);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
         break;
     case 0x1: /* ne: !Z */
         gen_load_cpu_field(t_f1_64, ZF);
-        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, label);
         break;
     case 0x2: /* cs: C */
         gen_load_cpu_field(t_f1_64, CF);
@@ -129,19 +129,19 @@ static void gen_test_cond(int cond, int label)
         break;
     case 0x4: /* mi: N */
         gen_load_cpu_field(t_f1_64, NF);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_LT, t_f1_64, 0, label);
         break;
     case 0x5: /* pl: !N */
         gen_load_cpu_field(t_f1_64, NF);
-        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_GE, t_f1_64, 0, label);
         break;
     case 0x6: /* vs: V */
         gen_load_cpu_field(t_f1_64, VF);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_LT, t_f1_64, 0, label);
         break;
     case 0x7: /* vc: !V */
         gen_load_cpu_field(t_f1_64, VF);
-        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_GE, t_f1_64, 0, label);
         break;
     case 0x8: /* hi: C && !Z */
         t_f2_64 = tcg_temp_new_i64();
@@ -149,7 +149,7 @@ static void gen_test_cond(int cond, int label)
         gen_load_cpu_field(t_f1_64, CF);
         tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, t_label);
         gen_load_cpu_field(t_f2_64, ZF);
-        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f2_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_NE, t_f2_64, 0, label);
         gen_set_label(t_label);
         tcg_temp_free_i64(t_f2_64);
         break;
@@ -158,7 +158,7 @@ static void gen_test_cond(int cond, int label)
         gen_load_cpu_field(t_f1_64, CF);
         tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
         gen_load_cpu_field(t_f2_64, ZF);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f2_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f2_64, 0, label);
         tcg_temp_free_i64(t_f2_64);
         break;
     case 0xa: /* ge: N == V -> N ^ V == 0 */
@@ -166,7 +166,7 @@ static void gen_test_cond(int cond, int label)
         gen_load_cpu_field(t_f1_64, VF);
         gen_load_cpu_field(t_f2_64, NF);
         tcg_gen_xor_i64(t_f1_64, t_f1_64, t_f2_64);
-        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_GE, t_f1_64, 0, label);
         tcg_temp_free_i64(t_f2_64);
         break;
     case 0xb: /* lt: N != V -> N ^ V != 0 */
@@ -174,29 +174,29 @@ static void gen_test_cond(int cond, int label)
         gen_load_cpu_field(t_f1_64, VF);
         gen_load_cpu_field(t_f2_64, NF);
         tcg_gen_xor_i64(t_f1_64, t_f1_64, t_f2_64);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_LT, t_f1_64, 0, label);
         tcg_temp_free_i64(t_f2_64);
         break;
     case 0xc: /* gt: !Z && N == V */
         t_label = gen_new_label();
         t_f2_64 = tcg_temp_new_i64();
         gen_load_cpu_field(t_f1_64, ZF);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, t_label);
+        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, t_label);
         gen_load_cpu_field(t_f1_64, VF);
         gen_load_cpu_field(t_f2_64, NF);
         tcg_gen_xor_i64(t_f1_64, t_f1_64, t_f2_64);
-        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_GE, t_f1_64, 0, label);
         gen_set_label(t_label);
         tcg_temp_free_i64(t_f2_64);
         break;
     case 0xd: /* le: Z || N != V */
         t_f2_64 = tcg_temp_new_i64();
         gen_load_cpu_field(t_f1_64, ZF);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_EQ, t_f1_64, 0, label);
         gen_load_cpu_field(t_f1_64, VF);
         gen_load_cpu_field(t_f2_64, NF);
         tcg_gen_xor_i64(t_f1_64, t_f1_64, t_f2_64);
-        tcg_gen_brcondi_i64(TCG_COND_NE, t_f1_64, 0, label);
+        tcg_gen_brcondi_i64(TCG_COND_LT, t_f1_64, 0, label);
         tcg_temp_free_i64(t_f2_64);
         break;
     default:
-- 
1.7.9.5

