From b851ac698b559744336198a4e3d98c3f1e295c52 Mon Sep 17 00:00:00 2001
From: Liu Guoli <liuguoli@mprc.pku.edu.cn>
Date: Wed, 15 Aug 2012 02:50:57 +0800
Subject: [PATCH 125/247] unicore64: Add operations for p0.c2, p0.c3, p0.c5
 and p0.c6

Signed-off-by: Liu Guoli <liuguoli@mprc.pku.edu.cn>
---
 target-unicore64/cpu.h     |    3 ++-
 target-unicore64/helper.c  |   40 +++++++++++++++++++++++++++++++++++++---
 target-unicore64/softmmu.c |    5 +++--
 3 files changed, 42 insertions(+), 6 deletions(-)

diff --git a/target-unicore64/cpu.h b/target-unicore64/cpu.h
index b3558df..2efc519 100644
--- a/target-unicore64/cpu.h
+++ b/target-unicore64/cpu.h
@@ -59,7 +59,8 @@ typedef struct CPUUniCore64State {
         uint64_t c0_cpuid;
         uint64_t c1_sys; /* System control register.  */
         uint64_t c2_base; /* MMU translation table base.  */
-        uint64_t c3_faultstatus; /* Fault status registers.  */
+        uint64_t c3_ifaultstatus; /* Instruction fault status register.  */
+        uint64_t c3_dfaultstatus; /* Data fault status register.  */
         uint64_t c4_faultaddr; /* Fault address registers.  */
         uint64_t c4_itrapaddr; /* Exception address register.*/
         uint64_t c6_dcache; /* Dcache management register */
diff --git a/target-unicore64/helper.c b/target-unicore64/helper.c
index d0b9e98..6a5e43f 100644
--- a/target-unicore64/helper.c
+++ b/target-unicore64/helper.c
@@ -235,6 +235,8 @@ uint64_t helper_cp0_get(CPUUniCore64State *env, uint64_t creg,
         switch (cop) {
         case 0:
             return env->cp0.c0_cpuid;
+        case 1:
+            return env->cp0.c1_sys;
         }
         break;
     case 1:
@@ -243,6 +245,20 @@ uint64_t helper_cp0_get(CPUUniCore64State *env, uint64_t creg,
             return env->cp0.c1_sys;
         }
         break;
+    case 2:
+        switch (cop) {
+        case 0:
+            return env->cp0.c2_base;
+        }
+        break;
+    case 3:
+        switch (cop) {
+        case 0:
+            return env->cp0.c3_ifaultstatus;
+        case 1:
+            return env->cp0.c3_dfaultstatus;
+        }
+        break;
     case 12:
         if (cop < 8) {
             return env->cp0.c12_sysu[cop];
@@ -275,11 +291,29 @@ void helper_cp0_set(CPUUniCore64State *env, uint64_t val, uint64_t creg,
         }
         env->cp0.c1_sys = val;
         break;
+    case 2:
+        if (cop != 0) {
+            goto unrecognized;
+        }
+        env->cp0.c2_base = val;
+        break;
+    case 5:
+        switch (cop) {
+        case 0x18:
+            DPRINTF("Invalidate ITLB with ASID\n");
+            return;
+        default:
+            goto unrecognized;
+        }
+        break;
     case 6:
         switch (cop) {
-        case 8:
-            env->cp0.c6_dcache = val;
-            break;
+        case 0x8:
+            DPRINTF("Invalidate Entire L1 DCache\n");
+            return;
+        case 0xc:
+            DPRINTF("Flush Entire L1 DCache\n");
+            return;
         default:
             goto unrecognized;
         }
diff --git a/target-unicore64/softmmu.c b/target-unicore64/softmmu.c
index 4f77a89..db9cf3b 100644
--- a/target-unicore64/softmmu.c
+++ b/target-unicore64/softmmu.c
@@ -208,11 +208,12 @@ static int get_phys_addr(CPUUniCore64State *env, target_ulong address,
 
 do_fault:
     if (code) {
-        env->cp0.c3_faultstatus = code;
-        env->cp0.c4_faultaddr = address;
         if (access_type == 2) {
+            env->cp0.c3_ifaultstatus = code;
             env->exception_index = UC64_EXCP_ITRAP;
         } else {
+            env->cp0.c3_dfaultstatus = code;
+            env->cp0.c4_faultaddr = address;
             env->exception_index = UC64_EXCP_DTRAP;
         }
     }
-- 
1.7.9.5

